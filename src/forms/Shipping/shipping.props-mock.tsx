import { Builder } from '../../builder';
import { IAbode } from '../Abode';
import { IInput, IOption, ISelect } from '../Field/types';
import { ICheckbox } from '../Checkbox/types';
import { ShippingAbstractState } from './shipping.abstract.container';
import { ShippingFields } from './shipping.fields';

export const shippingState = Builder<ShippingAbstractState>()
  .delivery(
    Builder<IAbode>()
      .forname(
        Builder<IInput>()
          .id(ShippingFields.DELIVERY_FORENAME)
          .value('')
          .valid(false)
          .build()
      )
      .surname(
        Builder<IInput>()
          .id(ShippingFields.DELIVERY_SURNAME)
          .value('')
          .valid(false)
          .build()
      )
      .street(
        Builder<IInput>()
          .id(ShippingFields.DELIVERY_STREET)
          .value('')
          .valid(false)
          .build()
      )
      .streetNo(
        Builder<IInput>()
          .id(ShippingFields.DELIVERY_STREET_NO)
          .value('')
          .valid(false)
          .build()
      )
      .postcode(
        Builder<IInput>()
          .id(ShippingFields.DELIVERY_POSTCODE)
          .value('')
          .valid(false)
          .build()
      )
      .cities(
        Builder<ISelect>()
          .id(ShippingFields.DELIVERY_CITY)
          .value('')
          .options([
            Builder<IOption>()
              .id('prague')
              .value('Prague')
              .title('Prague')
              .build(),
          ])
          .build()
      )
      .countries(
        Builder<ISelect>()
          .id(ShippingFields.DELIVERY_COUNTRY)
          .value('')
          .options([
            Builder<IOption>()
              .id('czechia')
              .value('Czechia')
              .title('Czechia')
              .build(),
          ])
          .build()
      )
      .build()
  )
  .invoicing(
    Builder<IAbode>()
      .forname(
        Builder<IInput>()
          .id(ShippingFields.BILLING_FORENAME)
          .value('')
          .valid(false)
          .build()
      )
      .surname(
        Builder<IInput>()
          .id(ShippingFields.BILLING_SURNAME)
          .value('')
          .valid(false)
          .build()
      )
      .company(
        Builder<IInput>()
          .id(ShippingFields.BILLING_COMPANY)
          .value('')
          .valid(false)
          .build()
      )
      .vat(
        Builder<IInput>()
          .id(ShippingFields.BILLING_VAT)
          .value('')
          .valid(false)
          .build()
      )
      .street(
        Builder<IInput>()
          .id(ShippingFields.BILLING_STREET)
          .value('')
          .valid(false)
          .build()
      )
      .streetNo(
        Builder<IInput>()
          .id(ShippingFields.BILLING_STREET_NO)
          .value('')
          .valid(false)
          .build()
      )
      .postcode(
        Builder<IInput>()
          .id(ShippingFields.BILLING_POSTCODE)
          .value('')
          .valid(false)
          .build()
      )
      .cities(
        Builder<ISelect>()
          .id(ShippingFields.BILLING_CITY)
          .value('')
          .options([
            Builder<IOption>()
              .id('prague')
              .title('Prague')
              .value('prague')
              .build(),
          ])
          .build()
      )
      .countries(
        Builder<ISelect>()
          .id(ShippingFields.BILLING_COUNTRY)
          .value('')
          .options([
            Builder<IOption>()
              .id('czechia')
              .title('Czechia')
              .value('czechia')
              .build(),
          ])
          .build()
      )
      .build()
  )
  .company(
    Builder<ICheckbox>().id(ShippingFields.COMPANY).checked(true).build()
  )
  .data(Builder<ICheckbox>().id(ShippingFields.DATA).checked(false).build())
  .terms(Builder<ICheckbox>().id(ShippingFields.TERMS).checked(false).build())
  .build();
